const msg = {
  success: "Ok",
  userRequired: "Username required",
  emailRequired: "Email is required",
  passwordRequired: "Password required",
  validationError: "Validation error",
  userRegistered: "User registration successful",
  userNotFound: "User not found",
  staffNotFound: "Staff not found",
  staffCreated: "Staff added successfully ",
  invalidCredentials: "Password you have entered is invalid! Please Try Again",
  invalidOldPassword: "Incorrect old password, Please enter correct one!",
  loggedIn: "Succesfully Logged in User",
  invalidEmail: "Please enter a valid email address.",
  invalidMobile: "Please enter your registered number.",
  acceptTerms: "Please accept the terms to continue",
  invalidPassword: "Password validation failed",
  duplicateEmail: "The entered Email is already linked with an account, Please enter unique email.",
  duplicateUserName: "This User Name has been already taken",
  duplicatePhone: "The entered number is already linked with an account, Please enter unique number.",
  invalidUser: "User Credentials you have entered is invalid! Please Try Again",
  passworNotSet: "Pasword doesn't exists in this account! Please Reset or login with social account",
  firstNameRequired: "Firstname is required",
  forgetPassword: "Reset password link has been send",
  mismatchPassword: "Current Password is not matched",
  changePassword: "Password has been changed successfully",
  invalidRequest: "Invalid Request",
  alreadyExitService: "Service Name is already exist",
  serviceCreated: "Service created successfully",
  serviceUpdated: "Service updated succesfully",
  serviceNotFound: " Service Not Found",
  ClientNotFound: " Client Not Found",
  clientSignNull: "Client Signature can not be Blank ",
  clientCreated: "Client created successfully",
  clientUpdated: "Client updated successfully",
  unauthorisedRequest: "Unauthorized access",
  alreadyExist: "Already Exist",
  notExist: "Not Exist",
  workNotExist: "Workschedule does not Exist",
  serviceError: "service group is not exist or service name is already exist ",
  companyNotExist: "Company does not exist",
  companyCreated: "Company created successfully",
  companyUpdated: "Company updated successfully",
  delete: "deleted succesfully",
  appointmentNotExist: "Appointment does not Exist",
  appointmentCancelled: "Appointment cancelled successfully",
  appointmentCreated: "Appointment created successfully",
  appointmentNotCreated: "Appointment has not been created",
  appointmentUpdated: "Appointment updated successfully",
  therapistSignNull: "Therapist Signature can not be Blank ",
  otpSent: "Otp has been sent",
  otpExpired: "Otp has been expired",
  otpMisMatch: "Wrong Otp",
  ratingSuccessful: "Rating is done successfully",
  salesNotExist: "Sales do not exist of this staff",
  amountMissing: "Amount is missing",
  serverError: "Something went wrong, Please try again",
  updated: "Successfully Updated",
  intakeCreated: "Intake form created successfully",
  intakeUpdated: "Intake form updated successfully",
  intakeNotFound: "Intake form is not found",
  locationCreated: "Location created successfully",
  locationUpdated: "Location form updated successfully",
  salesCreated: "Sales has been done successfully",
  invoiceNotFound: "Invoices are not found",
  taxInvalid: "Invalid Request,Please send either taxGroup or taxRate",
  invalidTaxGroup: "There must be atleast two taxes",
  invalidDeletion1: "To delete this tax you need to first remove it from ",
  invalidDeletion2: " tax group",
  taxUpdated: "Tax Rates updated successfully",
  canNotDelete: "Can't delete",
  companySettingNotFound: "Invalid request or Not found",
  voucherValueError: "Voucher value is less",
  voucherApplied: "Voucher applied successfully",
  voucherServiceError: "This voucher cannot be redeemed, the service type does not match.",
  voucherError: "Voucher can not be redeemed",
  voucherExpired: "Voucher has been expired",
  voucherUsed: "Voucher has been used",
  voucherNotExist: "Voucher is not valid",
  voucherExist: "Voucher already exists",
  voucherNotFound: "Voucher not found",
  missingDateRange: "Please send Date Range",
  deleted: "Deleted Successfully",
  categoryCreated: "Category Created Successfully",
  categoryNotFound: "Category not found",
  brandCreated: "Brand Created Successfully",
  ownerCanNotDel: "Owner can't be deleted",
  quantityReq: "Quantity is required",
  duplicateDeviceToken: "Device Token is already exist",
  invalidStar: "Star rating is invalid",
  GiftCardNotFound: "No Gift Cards Are available",
  TipCardNotFound: "No Tip Cards Are available",
  created: "Successfully Created ",
  invalidToken: "Please send correct token or id",
  invalidLatLong: "Please send valid Lat/Long",
  dateInvalid: "Date is invalid",
  clientVerification: "Client is already exist.Please verify Otp to proceed",
  workscheduleErr: "WorkSchedule has not been created",
  dateError: "End date can not be less than start date",
  staffMissing: "Staff is missing",
  FAQcreated: "New FAQ created",
  FAQupdated: "FAQ updated",
  FAQdeleted: "FAQ deleted",
  FAQall: "All FAQS",
  totalSum: "All the result of the analytic data",
  imageNotUpload: "There was an issue with image uploading",
  blogNotUpload: "There was an issue with blog uploading",
  invalid: "The request is invalid",
  iouCreated: "IOU has been done successfully",
  therapistNotAvailable: "Therapist not availabe for that time.",
};

module.exports = {
  msg
};